{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "angryadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/delta_load_w_updates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy new or updated rows only from database using external control table",
				"activities": [
					{
						"name": "LookupLastWaterMark",
						"description": "Retrieve  the last high-watermark value stored in external control table",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"typeProperties": {
							"source": {
								"type": "SqlDWSource"
							},
							"dataset": {
								"referenceName": "sqldwAdventureWorksDestTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.Control_Table_Table_Name",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "LookupCurrentWaterMark",
						"description": "Retrieve  the current maximum value in watermark column of source data store",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "sqlAdventureWorksSourceTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.Data_Source_Table_Name",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "DeltaCopyfromDB",
						"description": "Copy activity to use query to filter the delta data by > last high-watermark and <= current high-watermark from source database, and then only copy the changes to the destination store.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupCurrentWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupLastWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from \n@{pipeline().parameters.Data_Source_Table_Name} where @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' and @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"writeBatchSize": 10000,
								"preCopyScript": {
									"value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.Data_Destination_Staging_Table_Name)}",
									"type": "Expression"
								},
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "blobstagingaccount",
									"type": "LinkedServiceReference"
								},
								"path": "adfstagingcopydata",
								"enableCompression": true
							},
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "sqlAdventureWorksSourceTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.Data_Source_Table_Name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sqldwAdventureWorksDestTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.Data_Destination_Staging_Table_Name",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeltaLoadFromStaging",
						"description": "Stored procedure activity to find the existing records in the destination table and delete them prior to  inserting the records from staging. ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeltaCopyfromDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'ANGRY].[delta_load_w_updates]')]",
							"storedProcedureParameters": {
								"LastModifiedDatetime": {
									"value": {
										"value": "@activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"StagingTableName": {
									"value": {
										"value": "@pipeline().parameters.Data_Destination_Staging_Table_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.Data_Destination_Table_Name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldwAdventureWorksDestination",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"Data_Source_Table_Name": {
						"type": "String",
						"defaultValue": "ANGRY.FactResellerSales"
					},
					"Data_Source_WaterMarkColumn": {
						"type": "String",
						"defaultValue": "ModifiedDate"
					},
					"Data_Destination_Table_Name": {
						"type": "String",
						"defaultValue": "ANGRY.FactResellerSales"
					},
					"Control_Table_Table_Name": {
						"type": "String",
						"defaultValue": "ANGRY.watermarktable"
					},
					"Control_Table_Column_Name": {
						"type": "String",
						"defaultValue": "WatermarkValue"
					},
					"Data_Destination_Staging_Table_Name": {
						"type": "String",
						"defaultValue": "ANGRY.FactResellerSales_Staging"
					}
				},
				"folder": {
					"name": "delta_w_updates"
				}
			}
		}
	]
}